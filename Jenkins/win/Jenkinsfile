pipeline {
    environment {
        customerImage   = ''
        productImage    = ''
        storeImage      = ''
        databaseImage   = ''
        customermicroservice    = 'customer-server-593-594-606-607:latest'
        productmicroservice     = 'products-server-593-594-606-607:latest'
        storemicroservice       = 'store-server-593-594-606-607:latest'
        databasemicroservice    = 'database-server-593-594-606-607:latest'
        // dockerhubuser = 'rockerbot'
        dockerhubuser = 'varunkamathcs594'
        DOCKERHUB_CREDENTIALS = credentials('varunchandrashekar1dockerhub')
        // DOCKERHUB_CREDENTIALS = credentials('rockerbotdockerhub')
    }

    agent any

    stages {
        stage("testing stageJenkins"){
            steps {
                echo 'jenkins running'
            }
        }
        stage('Checkout Source') {
            steps {
                git branch: 'main', url: 'https://github.com/Vaarun-Kamath/E-Commerce-Microservices.git'
                echo "git clone completed"
                bat 'dir'
            }
        }
        stage('Docker Login') {
           steps {
               echo 'Logon in to docker hub'
               // bat 'echo %DOCKERHUB_CREDENTIALS_PSW%'
               // bat 'echo %DOCKERHUB_CREDENTIALS_USR%'
               // bat 'echo %DOCKERHUB_CREDENTIALS_PSW% | docker login -u %DOCKERHUB_CREDENTIALS_USR% --password-stdin docker.io'
               // echo 'Login Successfull'
           }
       }
        // stage("have docker?"){
        //     steps {
        //         bat 'docker version'
        //         bat 'dir' 
        //         // bat 'ls'
        //     }
        // }
        stage('client izer') {
            steps {
                dir('client') {
                    script {
                        bat 'dir'
                        // bat 'ls'
                        // bat 'npm i'
                        // bat 'npm run build'
                    }
                }
            }
        }
        stage('Build Images') {
            steps {
                script{
                    bat 'dir'
                    // bat 'ls'
                    
                    bat 'echo "pre customer image"'
                    customerImage = docker.build("${dockerhubuser}/${customermicroservice}", "--pull --file server/customer/Dockerfile server/customer")
                    // bat "docker build -t ${customermicroservice} --pull --file server/customer/Dockerfile server/customer"
                    bat 'echo "post customer image"'
                    productImage = docker.build("${dockerhubuser}/${productmicroservice}", "--pull --file server/products/Dockerfile server/products")
                    storeImage = docker.build("${dockerhubuser}/${storemicroservice}", "--pull --file server/store/Dockerfile server/store")
                    databaseImage = docker.build("${dockerhubuser}/${databasemicroservice}", "--pull --file server/database/Dockerfile server/database")
                    
                    // dir('server/customer') {
                    //     script {
                    //         bat 'dir'
                    //         // customerImage = docker.build customermicroservice
                    //         bat "docker build -t ${dockerhubuser}/${customermicroservice} ."
                    //     }
                    // }
                    
                    // dir('server/products') {
                    //     script {
                    //         bat 'dir'
                    //         // productImage = docker.build productmicroservice
                    //         bat "docker build -t ${dockerhubuser}/${productmicroservice} ."
                    //     }
                    // }
                    
                    // dir('server/store') {
                    //     script {
                    //         bat 'dir'
                    //         // storeImage = docker.build storemicroservice
                    //         bat "docker build -t ${dockerhubuser}/${storemicroservice} ."
                    //     }
                    // }
                    
                    // dir('server/database') {
                    //     script {
                    //         bat 'dir'
                    //         // databaseImage = docker.build databasemicroservice
                    //         bat "docker build -t ${dockerhubuser}/${databasemicroservice} ."
                    //     }
                    // }
                }
            }
        }
        stage('Push Images') {
            steps {
                script {
                    echo 'pushing imgs'
                    docker.withRegistry('https://index.docker.io/v1/', dockerhubuser) {
                        customerImage.push()
                        productImage.push()
                        storeImage.push()
                        databaseImage.push()
                    }
                    echo 'pushed imgs'
                }
                // bat 'echo "$DOCKER_PASSWORD"'
                // bat 'echo "$DOCKER_PASSWORD" | docker login -u varunchandrashekar1 --password-stdin'
                // bat "docker push ${customermicroservice}"
                // bat "docker push ${productmicroservice}"
                // bst "docker push ${storemicroservice}"
                // bst "docker push ${databasemicroservice}"
            }
        }

        stage('List pods') {
            steps{
                echo 'pods'
                bat 'dir'
                // bat 'minikube start'
                bat 'kubectl version'
                echo 'applying k8s'
                // bat 'kubectl apply -f ./k8s'
                // bat 'minikube addons enable ingress'
                // bat 'minikubeÂ tunnel'

                // bat 'curl -LO "https://storage.googleapis.com/kubernetes-release/release/v1.20.5/bin/linux/amd64/kubectl"'
                // bat 'chmod u+x ./kubectl'
                // bat minikube run
            }
        }

        // stage('Deploy kubernetes') {
        //     steps {
        //         bat './kubectl apply -f ./k8s'
        //     }
        // }
        
        stage('test') {
            steps {
                echo 'to test'
            }
        }
    }
}
